version: "2"
services:
  backend:
    build:
      context: .
    image: backend-image
    container_name: backend
    restart: on-failure
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    command: >
      sh -c "wait-for rabbit:5672 && python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"
    stdin_open: true
    tty: true
    links:
      - rabbit
    depends_on:
      - rabbit
    networks:
      - shared_network
  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - shared_network
  worker:
    image: backend-image
    restart: on-failure
    #command: celery -A food_ordering worker --loglevel=INFO
    command: >
      sh -c "wait-for backend:8080 &&
             celery -A food_ordering worker --loglevel=INFO"
    links:
      - backend
      - rabbit
    depends_on:
      - backend
      - rabbit
    networks:
      - shared_network
networks:
  shared_network:
    driver: bridge